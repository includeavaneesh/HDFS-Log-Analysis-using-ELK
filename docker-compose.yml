version: '3.8'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03,es04,es05
      - cluster.initial_master_nodes=es01,es02,es03,es04,es05
      - network.host=0.0.0.0
      - discovery.zen.minimum_master_nodes=3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03,es04,es05
      - cluster.initial_master_nodes=es01,es02,es03,es04,es05
      - network.host=0.0.0.0
      - discovery.zen.minimum_master_nodes=3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    ports:
      - "9201:9200"
    networks:
      - elastic
    depends_on:
      - es01

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02,es04,es05
      - cluster.initial_master_nodes=es01,es02,es03,es04,es05
      - network.host=0.0.0.0
      - discovery.zen.minimum_master_nodes=3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    ports:
      - "9202:9200"
    networks:
      - elastic
    depends_on:
      - es01

  es04:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: es04
    environment:
      - node.name=es04
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02,es03,es05
      - cluster.initial_master_nodes=es01,es02,es03,es04,es05
      - network.host=0.0.0.0
      - discovery.zen.minimum_master_nodes=3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data04:/usr/share/elasticsearch/data
    ports:
      - "9203:9200"
    networks:
      - elastic
    depends_on:
      - es01


  es05:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: es05
    environment:
      - node.name=es05
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02,es03,es04
      - cluster.initial_master_nodes=es01,es02,es03,es04,es05
      - network.host=0.0.0.0
      - discovery.zen.minimum_master_nodes=3
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data05:/usr/share/elasticsearch/data
    ports:
      - "9204:9200"
    networks:
      - elastic
    depends_on:
      - es01

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: logstash
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./logstash/patterns/:/usr/share/logstash/patterns/
      - ./logs/:/input-logs/
    ports:
      - "5044:5044"
      - "9600:9600"
    networks:
      - elastic
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
      - ELASTICSEARCH_HOSTS=http://es01:9200
    depends_on:
      - es01
      - redis
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - elastic
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_lb:9400"]
      - ELASTICSEARCH_REQUESTTIMEOUT=30000
      - ELASTICSEARCH_PINGTIMEOUT=30000
    depends_on:
      - es01
      - es02
      - es03
      - es04
      - es05
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped  # Automatically restart if it fails
  
  elasticsearch_lb:
    image: nginx:latest
    container_name: elasticsearch_lb
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9400:9400"
    networks:
      - elastic
    depends_on:
      - es01
      - es02
      - es03
      - es04
      - es05
  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - elastic
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
volumes:
  data01:
  data02:
  data03:
  data04:
  data05:
  redis_data:
networks:
  elastic:
    driver: bridge