input {
  file {
    path => "/input-logs/**/edge.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^[A-F0-9]{16}"
      negate => true
      what => "previous"
    }
    type => "edge"
    ecs_compatibility => "v1"
  }

  file {
    path => "/input-logs/**/event.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^[A-F0-9]{16}"
      negate => true
      what => "previous"
    }
    type => "event"
    ecs_compatibility => "v1"
  }

  file {
    path => "/input-logs/**/operation.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^[a-zA-Z]+"
      negate => true
      what => "previous"
    }
    type => "operation"
    ecs_compatibility => "v1"
  }

  file {
    path => "/input-logs/**/trace.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^[A-F0-9]{16}"
      negate => true
      what => "previous"
    }
    type => "trace"
    ecs_compatibility => "v1"
  }
}

filter {
  if [type] == "edge" {
    mutate {
      gsub => [ "message", '"""', "" ]
      strip => ["message"]
    }
    
    csv {
      separator => ","
      columns => ["TaskID", "FatherTID", "FatherStartTime", "ChildTID"]
      skip_empty_columns => true
      skip_empty_rows => true
      ecs_compatibility => "v1"
    }

    mutate {
      convert => { 
        "FatherStartTime" => "float"
      }
      remove_field => [ "message" ]
    }
  }

  if [type] == "event" {
    mutate {
      gsub => [ "message", '"""', "" ]
      strip => ["message"]
    }
    
    csv {
      separator => ","
      columns => ["TaskID", "TID", "OpName", "StartTime", "EndTime", "HostAddress", "HostName", "Agent", "Description"]
      skip_empty_columns => true
      skip_empty_rows => true
      ecs_compatibility => "v1"
    }

    mutate {
      convert => { 
        "StartTime" => "float"
        "EndTime" => "float"
      }
      add_field => {
        "[@metadata][timestamp]" => "%{StartTime}"
      }
      remove_field => [ "message" ]
    }

    date {
      match => [ "[@metadata][timestamp]", "UNIX_MS" ]
      target => "@timestamp"
    }
  }

  if [type] == "operation" {
    mutate {
      gsub => [ "message", '"""', "" ]
      strip => ["message"]
    }
    
    csv {
      separator => ","
      columns => ["OpName", "Num", "MaxDelay", "MinDelay", "AverageDelay"]
      skip_empty_columns => true
      skip_empty_rows => true
      ecs_compatibility => "v1"
    }

    mutate {
      convert => { 
        "Num" => "integer"
        "MaxDelay" => "float"
        "MinDelay" => "float"
        "AverageDelay" => "float"
      }
      remove_field => [ "message" ]
    }
  }

  if [type] == "trace" {
    mutate {
      gsub => [ "message", '"""', "" ]
      strip => ["message"]
    }
    
    csv {
      separator => ","
      columns => ["TaskID", "Title", "NumReports", "NumEdges", "FirstSeen", "LastUpdated", "StartTime", "EndTime"]
      skip_empty_columns => true
      skip_empty_rows => true
      ecs_compatibility => "v1"
    }

    mutate {
      convert => { 
        "NumReports" => "integer"
        "NumEdges" => "integer"
        "StartTime" => "float"
        "EndTime" => "float"
      }
      remove_field => [ "message" ]
    }
  }
}
output {
  redis {
    host => "redis"
    port => 6379
    data_type => "list"
    key => "logstash-%{[type]}"
  }
}

input {
  redis {
    host => "redis"
    port => 6379
    data_type => "list"
    key => "logstash-*"
    type => "redis-input"
  }
}
output {
  elasticsearch {
    hosts => ["es01:9200"]
    index => "%{[type]}-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}